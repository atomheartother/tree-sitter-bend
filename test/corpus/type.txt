==================
Type declaration
==================

type Shape:
  Circle { radius }
  Rectangle { width, height }

def area(shape):
  match shape:
    case Shape/Circle:
      return 3.14 * shape.radius ** 2.0
    case Shape/Rectangle:
      return shape.width * shape.height

def main:
  return area(Shape/Circle { radius: 10.0 })

---

(source_file
  (type_declaration
    name: (identifier)
    (object_details
      (type_name
        (identifier))
      (object_property
        (identifier)))
    (object_details
      (type_name
        (identifier))
      (object_property
        (identifier))
      (object_property
        (identifier))))
  (function_declaration
    name: (identifier)
    parameters: (parameter_list
      (identifier))
    body: (block
      (match
        (identifier)
        (match_case
          (type_name
            (identifier)
            (identifier))
          (block
            (return_statement
              (number)
              (variable
                (identifier)
                (identifier))
              (number))))
        (match_case
          (type_name
            (identifier)
            (identifier))
          (block
            (return_statement
              (variable
                (identifier)
                (identifier))
              (variable
                (identifier)
                (identifier))))))))
  (function_declaration
    name: (identifier)
    body: (block
      (return_statement
        (function_call
          name: (identifier)
          (object_definition
            (type_name
              (identifier)
              (identifier))
            (field_assignment
              (identifier)
              (number))))))))

==================
bend
==================

type Tree:
  Node { ~lft, ~rgt }
  Leaf { val }

def main():
  bend x = 0:
    when x < 3:
      tree = Tree/Node { lft: fork(x + 1), rgt: fork(x + 1) }
    else:
      tree = Tree/Leaf { val: 7 }
  return tree

---

(source_file
  (type_declaration
    name: (identifier)
    (object_details
      (type_name
        (identifier))
      (object_property
        (identifier))
      (object_property
        (identifier)))
    (object_details
      (type_name
        (identifier))
      (object_property
        (identifier))))
  (function_declaration
    name: (identifier)
    parameters: (parameter_list)
    body: (block
      (bend
        (assignment_operation
          (identifier)
          (number))
        (bend_when
          (variable
            (identifier))
          (number)
          (block
            (assignment_operation
              (identifier)
              (object_definition
                (type_name
                  (identifier)
                  (identifier))
                (field_assignment
                  (identifier)
                  (builtin_function_call
                    (builtin_function)
                    (variable
                      (identifier))
                    (number)))
                (field_assignment
                  (identifier)
                  (builtin_function_call
                    (builtin_function)
                    (variable
                      (identifier))
                    (number)))))))
        (bend_else
          (block
            (assignment_operation
              (identifier)
              (object_definition
                (type_name
                  (identifier)
                  (identifier))
                (field_assignment
                  (identifier)
                  (number))))
            (return_statement
              (variable
                (identifier)))))))))
